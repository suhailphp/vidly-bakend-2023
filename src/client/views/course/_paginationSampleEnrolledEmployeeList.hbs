<style>
    .hidden {
        display: none !important;
    }

    .pagination-container {
        width: calc(100% - 2rem);
        display: flex;
        align-items: center;
        position: absolute;
        bottom: 0;
        padding: 1rem 0;
        justify-content: center;
    }

    .pagination-number,
    .pagination-button{
        font-size: 1.1rem;
        background-color: transparent;
        border: none;
        margin: 0.25rem 0.25rem;
        cursor: pointer;
        height: 2.5rem;
        width: 2.5rem;
        border-radius: .2rem;
    }

    .pagination-number:hover,
    .pagination-button:not(.disabled):hover {
        background: #fff;
    }

    .pagination-number.active {
        color: #fff;
        background: #0085b6;
    }
</style>


<ul class="row" id="paginated-list">
    {{#each data.employee}}

    <li class="d-flex align-items-center mb-7 col-6 "  >
        
        <div class="symbol symbol-50px me-5" onclick="View({{this.employeeID}})" >
            {{#if this.profilePhotoDocumentID}}
                <img src="{{../CONFIG.BASE_URL}}employee/document/{{this.employeeID}}" alt="">
            {{else}}
                {{{nameToIcon this.fullNameAr this.fullNameEn ../LNG}}}
            {{/if}}
        </div>
        <div class="flex-grow-1">
            <a onclick="View({{this.employeeID}})" style="cursor: pointer;" class="text-dark fw-bold text-hover-primary fs-6">{{? ../LNG '==' 'ar' this.fullNameAr this.fullNameEn}}</a>
            <span class="text-muted d-block fw-bold">{{this.militaryNumber}}
            </span>
        </div>

    </li>

{{/each}}

</ul>

<div class="row mt-10" >
    <div class="col-12" >
        <nav class="pagination-container">
            <button class="pagination-button" id="prev-button" aria-label="Previous page" title="Previous page">
            &lt;
            </button>

            <div id="pagination-numbers">

            </div>

            <button class="pagination-button" id="next-button" aria-label="Next page" title="Next page">
            &gt;
            </button>
        </nav>

    </div>
</div>



<script type="text/javascript">
    const paginationNumbers = document.getElementById("pagination-numbers");
    const paginatedList = document.getElementById("paginated-list");
    const listItems = paginatedList.querySelectorAll("li");
    const nextButton = document.getElementById("next-button");
    const prevButton = document.getElementById("prev-button");

    const paginationLimit = 10;
    const pageCount = Math.ceil(listItems.length / paginationLimit);
    let currentPage = 1;

    const disableButton = (button) => {
        button.classList.add("disabled");
        button.setAttribute("disabled", true);
    };

    const enableButton = (button) => {
        button.classList.remove("disabled");
        button.removeAttribute("disabled");
    };

    const handlePageButtonsStatus = () => {
    if (currentPage === 1) {
        disableButton(prevButton);
    } else {
        enableButton(prevButton);
    }

    if (pageCount === currentPage) {
        disableButton(nextButton);
    } else {
        enableButton(nextButton);
    }
    };

    const handleActivePageNumber = () => {
        document.querySelectorAll(".pagination-number").forEach((button) => {
            button.classList.remove("active");
            const pageIndex = Number(button.getAttribute("page-index"));
            if (pageIndex == currentPage) {
                button.classList.add("active");
            }
        });
    };

    const appendPageNumber = (index) => {
        const pageNumber = document.createElement("button");
        pageNumber.className = "pagination-number";
        pageNumber.innerHTML = index;
        pageNumber.setAttribute("page-index", index);
        pageNumber.setAttribute("aria-label", "Page " + index);

        paginationNumbers.appendChild(pageNumber);
    };

    const getPaginationNumbers = () => {
        for (let i = 1; i <= pageCount; i++) {
            appendPageNumber(i);
        }
    };

    const setCurrentPage = (pageNum) => {
        currentPage = pageNum;

        handleActivePageNumber();
        handlePageButtonsStatus();
        
        const prevRange = (pageNum - 1) * paginationLimit;
        const currRange = pageNum * paginationLimit;

        listItems.forEach((item, index) => {
            item.classList.add("hidden");
            if (index >= prevRange && index < currRange) {
            item.classList.remove("hidden");
            }
        });
    };

    window.addEventListener("load", () => {
        getPaginationNumbers();
        setCurrentPage(1);

        prevButton.addEventListener("click", (e) => {
            e.preventDefault();
            setCurrentPage(currentPage - 1);
        });

        nextButton.addEventListener("click", (e) => {
            e.preventDefault();
            setCurrentPage(currentPage + 1);
        });

        document.querySelectorAll(".pagination-number").forEach((button) => {
            const pageIndex = Number(button.getAttribute("page-index"));

            if (pageIndex) {
            button.addEventListener("click", (e) => {
                e.preventDefault();
                setCurrentPage(pageIndex);
            });
            }
        });
    });
</script>
