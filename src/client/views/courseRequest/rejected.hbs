
<div id="kt_app_content_container" class="app-container container-xxl"></div>
	<div class="card">
		<div class="card-header border-0 pt-6">
			<div class="card-title">
				<div class="d-flex align-items-center position-relative my-1">
					<span class="svg-icon svg-icon-1 position-absolute ms-6">
						<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
							<rect opacity="0.5" x="17.0365" y="15.1223" width="8.15546" height="2" rx="1" transform="rotate(45 17.0365 15.1223)" fill="currentColor" />
							<path d="M11 19C6.55556 19 3 15.4444 3 11C3 6.55556 6.55556 3 11 3C15.4444 3 19 6.55556 19 11C19 15.4444 15.4444 19 11 19ZM11 5C7.53333 5 5 7.53333 5 11C5 14.4667 7.53333 17 11 17C14.4667 17 17 14.4667 17 11C17 7.53333 14.4667 5 11 5Z" fill="currentColor" />
						</svg>
					</span>
					<input type="text" data-kt-user-table-filter="search" class="form-control form-control-solid w-250px ps-14" placeholder="Search user" />
				</div>
			</div>
			<div class="card-toolbar">
				<div class="d-flex justify-content-end" data-kt-user-table-toolbar="base">
					<a type="button" class="btn btn-primary" id="" href="courseRequest/form">
                        <span class="svg-icon svg-icon-2">
                            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <rect opacity="0.5" x="11.364" y="20.364" width="16" height="2" rx="1" transform="rotate(-90 11.364 20.364)" fill="currentColor" />
                                <rect x="4.36396" y="11.364" width="16" height="2" rx="1" fill="currentColor" />
                            </svg>
                        </span>
                        {{__ 'New request'}}
                    </a>
				</div>
			</div>
		</div>

		<div class="card-body py-4">
			<!--begin::Table-->
			<table class="table align-middle table-row-dashed fs-6 gy-5" id="kt_table_users">
				<!--begin::Table head-->
				<thead>
					<!--begin::Table row-->
					<tr class="text-start text-muted fw-bold fs-7 text-uppercase gs-0" >
						<th class="w-10px pe-2">
							<div class="form-check form-check-sm form-check-custom form-check-solid me-3">
								<input class="form-check-input" type="checkbox" data-kt-check="true" data-kt-check-target="#kt_table_users .form-check-input" value="1" />
							</div>
						</th>
						<th class="min-w-125px">{{__ 'Name'}}</th>
						{{!-- <th class="min-w-125px">{{__ 'Course Type'}}</th>
						<th class="min-w-125px">{{__ 'Quota'}}</th>
						<th class="min-w-125px">{{__ 'Amount'}}</th> --}}
						<th class="min-w-125px">{{__ 'Created On'}}</th>
						<th class="min-w-125px">{{__ 'Rejected On'}}</th>
						<th class="min-w-50px"></th>
						<th class="text-end min-w-100px">{{__ 'Actions'}}</th>
					</tr>
					<!--end::Table row-->
				</thead>
			</table>
		</div>
	</div>
</div>

<!--begin::Modal - Add user-->
<div class="modal fade" id="form_modal" tabindex="-2" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered mw-650px" id="form_modal_content">
	
	</div>
</div>
<!--end::Modal - Add user-->

<div class="modal fade" tabindex="-1" id="view_modal">
     <div class="modal-dialog  mw-800px" id="view_modal_content">

     </div>
</div>
			
						
<!--begin::Javascript-->

<script type="text/javascript">

    let mode;
    let datatable
    let enrolledEmployeeTable
    let filterSearchErnrolledEmployeeTable
    let courseRequestID 
    $(function () {
        datatable = $("#kt_table_users").DataTable({
            ...PSA.defaults.datatable(), 
            order: [[4, 'desc']],
            'columns' : [
                { 
                    orderable: false,
                    data : function ( row) {
                    return `
                        <div class="form-check form-check-sm form-check-custom form-check-solid">
                            <input class="form-check-input" type="checkbox" value="1" />
                        </div>
                    `
                }
                },
                { 	
                    name:getLang() == 'ar' ? 'nameAr' : 'nameEn',
                    data : function ( row) {
                        return `
                            <div class="d-flex align-items-center">
                                <div class="symbol symbol-circle symbol-50px overflow-hidden me-3">
                                    <a onclick="View(${row.courseRequestID})" style="cursor:pointer" >
                                        <div class="symbol-label">
                                            ${(row.courseDocumentID)?
                                                    `<img src="{{CONFIG.BASE_URL}}course/document/${row.courseRequestID}" class="w-100" style="cursor:pointer"/>`
                                                :
                                                     `<img src="{{CONFIG.BASE_URL}}dist/assets/media/psa.png" class="w-100" style="cursor:pointer"/>`
                                                }
                                        </div>
                                    </a>
                                </div>
                                <div class="d-flex flex-column">
                                    <a onclick="View(${row.courseRequestID})" class="text-gray-800 text-hover-primary mb-1" style="cursor:pointer">${getLang() == 'ar' ? row.nameAr : row.nameEn}</a>
                                    ${(row.department)?`<span>${getLang() == 'ar' ? row.department.nameAr : row.department.nameEn}</span>`:''}
                                </div>
                            </div>
                        `
                }
                },
                
                {
                    name:'createdOn',
                    data: row => PSA.date.dateFormat(row.createdOn)
                },
                {
                    name:'rejectedOn',
                    data: row => PSA.date.dateFormat(row.rejectedOn)
                },
                { 
                    orderable: false,
                    data : function ( row) {
                        return PSA.courseRequestApprovalLabel(row.finalApproved, row.HRApproved,row.initApproved,row.rejected)
                    }
                },
                { 
                    orderable: false,
                    data : function ( row) {
                    return `
                        <div class="text-end">
                            <a href="#" class="btn btn-sm btn-light btn-active-light-primary" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end">Actions
                            <span class="svg-icon svg-icon-5 m-0">
                                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M11.4343 12.7344L7.25 8.55005C6.83579 8.13583 6.16421 8.13584 5.75 8.55005C5.33579 8.96426 5.33579 9.63583 5.75 10.05L11.2929 15.5929C11.6834 15.9835 12.3166 15.9835 12.7071 15.5929L18.25 10.05C18.6642 9.63584 18.6642 8.96426 18.25 8.55005C17.8358 8.13584 17.1642 8.13584 16.75 8.55005L12.5657 12.7344C12.2533 13.0468 11.7467 13.0468 11.4343 12.7344Z" fill="currentColor"></path>
                                </svg>
                            </span>
                            </a>
                            <div class="menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-600 menu-state-bg-light-primary fw-semibold fs-7 w-125px py-4" data-kt-menu="true" style="">
                                <div class="menu-item px-3">
                                    <a href="courseRequest/${row.courseRequestID}/edit" class="menu-link px-3">{{__ 'Edit'}}</a>
                                </div>
                                ${(row.deleted)?
                                    `
                                    <div class="menu-item px-3">
                                        <a onclick="Trash(${row.courseRequestID},1)" class="menu-link px-3" data-kt-customer-table-filter="delete_row">{{__ 'Restore'}}</a>
                                    </div>
                                    <div class="menu-item px-3">
                                        <a onclick="DeletePermanent(${row.courseRequestID})" class="menu-link px-3" data-kt-customer-table-filter="delete_row">{{__ 'Force Delete'}}</a>
                                    </div>
                                    `:`
                                    <div class="menu-item px-3">
                                        <a onclick="Trash(${row.courseRequestID})" class="menu-link px-3" data-kt-customer-table-filter="delete_row">{{__ 'Delete'}}</a>
                                    </div>
                                    `
                                }
                            </div>						
                        </div>	
                    `
                    }
                },
            ]
        });
    });

  	const filterSearch = document.querySelector('[data-kt-user-table-filter="search"]');
	filterSearch.addEventListener('keyup', function (e) {
		datatable.search(e.target.value).draw();
	});

    function View(ID){
        request(`/courseRequest/${ID}/view`)
        .then(response => {
            if (response) {
                $('#view_modal_content').html(response)
                $("#view_modal").modal('show');
            } else {
                PSA.toast.error('{{__ "Something went wrong, please try again"}}','{{__ "Error"}}')
            }
        })
        .catch(PSA.exception.catch)
    }

    function courseApproval(action){
        if(action && action === 'HRApprove'){
            PSA.confirmation({  
                body:__('Are you sure you want to proceed with the HR approval?')
            })
            .then(() => {
                request(`/courseRequest/${courseRequestID}/approval/${action}`)
                    .then(response => {
                        if (response.HRApproved) {
                            PSA.toast.success(__('HR approval has been successfully completed'))
                            View(courseRequestID)
                            datatable.ajax.reload(null, false);
                        }else {
                            PSA.toast.warning(__('Course approval failed. Please try again'))
                        }
                    })
                    .catch(PSA.exception.catch)
            }).catch(() => {});
        }
        else if(action && action === 'initApprove'){
            PSA.confirmation({  
                body:__('Are you sure you want to proceed with the Initial approval?')
            })
            .then(() => {
                request(`/courseRequest/${courseRequestID}/approval/${action}`)
                    .then(response => {
                        if (response.HRApproved) {
                            PSA.toast.success(__('Initial approval has been successfully completed'))
                            View(courseRequestID)
                            datatable.ajax.reload(null, false);
                        }else {
                            PSA.toast.warning(__('Course approval failed. Please try again'))
                        }
                    })
                    .catch(PSA.exception.catch)
            }).catch(() => {});
        }

        else if(action && action === 'finalApprove'){
            PSA.confirmation({  
                body:__('Are you sure you want to proceed with the Final approval?')
            })
            .then(() => {
                request(`/courseRequest/${courseRequestID}/approval/${action}`)
                    .then(response => {
                        if (response.HRApproved) {
                            PSA.toast.success(__('Final approval has been successfully completed'))
                            View(courseRequestID)
                            datatable.ajax.reload(null, false);
                        }else {
                            PSA.toast.warning(__('Course approval failed. Please try again'))
                        }
                    })
                    .catch(PSA.exception.catch)
            }).catch(() => {});
        }
    }

    function courseRejection(){
        PSA.confirmation({  
                body:__('Are you sure you want to reject this course request?')
            })
            .then(() => {
                request(`/courseRequest/${courseRequestID}/rejection`)
                    .then(response => {
                        if (response.rejected) {
                            PSA.toast.success(__('The course request has been rejected.'))
                            View(courseRequestID)
                            datatable.ajax.reload(null, false);
                        }else {
                            PSA.toast.warning(__('Course rejection failed. Please try again'))
                        }
                    })
                    .catch(PSA.exception.catch)
            }).catch(() => {});
    }

    function StatusChange(active,courseRequestID){
        PSA.confirmation({  
                body: (active)?"{{__ 'Do you want to disable the Courset?'}}":"{{__ 'Do you want to enable the employee account ?'}}",
                icon:(active)?'warning':'success'
            })
        .then(() => {
            request(`/courseRequest/${courseRequestID}/status`)
            .then(response => {
                if (response.active) {
                    PSA.toast.success('{{__ "Course enabled"}}','{{__ "Success"}}')
                    $('#kt_table_users').DataTable().ajax.reload();
                } else {
                    PSA.toast.error('{{__ "Course disabled"}}','{{__ "Error"}}')
                    $('#kt_table_users').DataTable().ajax.reload();
                }
            })
                .catch(PSA.exception.catch)
        }).catch(() => {});
    }

    function Trash(courseRequestID,restore=false){
        PSA.confirmation({  
                body: (restore)?"{{__ 'Do you want to restore the Course?'}}":"{{__ 'Do you want to delete the Course?'}}"
            })
        .then(() => {
             request(`/courseRequest/${courseRequestID}/trash`)
                .then(response => {
                    if (response.deleted) {
                        PSA.toast.error('{{__ "Course deleted"}}')
                        $('#kt_table_users').DataTable().ajax.reload();
                    } else {
                        PSA.toast.success('{{__ "Course restored"}}')
                        $('#kt_table_users').DataTable().ajax.reload();
                    }
                })
                .catch(PSA.exception.catch)
        }).catch(() => {});
    }

    function DeletePermanent(courseRequestID){
         PSA.confirmation({  
                body:  "{{__ 'Do you want to delete the Course permanently?'}}"
            })
        .then(() => {
             request(`/courseRequest/${courseRequestID}/delete`)
                .then(response => {
                    if (response) {
                        PSA.toast.error('{{__ "Course deleted permanently"}}')
                        $('#kt_table_users').DataTable().ajax.reload();
                    } else {
                        PSA.toast.error('{{__ "Something went wrong, please try again"}}','{{__ "Error"}}')
                    }
                })
                .catch(PSA.exception.catch)
        }).catch(() => {});
    }

</script>



