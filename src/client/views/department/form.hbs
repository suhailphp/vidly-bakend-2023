<div class="modal-content">
    <!--begin::Modal header-->
    <div class="modal-header" id="form_modal_header">
        <!--begin::Modal title-->
        <h2 class="fw-bold">{{#compare mode '===' 'add'}}{{__ 'Add Department'}}{{else}}{{__ 'Edit Department'}}{{/compare}}</h2>
        <!--end::Modal title-->
        <!--begin::Close-->
        <div class="btn btn-icon btn-sm btn-active-light-primary ms-2" data-bs-dismiss="modal" aria-label="Close">
           <span class="svg-icon svg-icon-1">
                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <rect opacity="0.5" x="6" y="17.3137" width="16" height="2" rx="1" transform="rotate(-45 6 17.3137)" fill="currentColor" />
                    <rect x="7.41422" y="6" width="16" height="2" rx="1" transform="rotate(45 7.41422 6)" fill="currentColor" />
                </svg>
            </span>
        </div>
        <!--end::Close-->
    </div>
    <!--end::Modal header-->
    <!--begin::Modal body-->
    <div class="modal-body scroll-y mx-5 mx-xl-15 my-7">
        <!--begin::Form-->
        <form id="form_modal_form" class="form" action="#"  >
            <div class="row g-9 " data-select2-id="select2-data-123-s6w3">
                <div class="col-md-12 fv-row">
                    <label class="required fw-semibold fs-6 mb-2">{{__ 'Name Arabic'}}</label>
                    <input type="text" name="nameAr" id="nameAr" class="form-control  mb-3 mb-lg-0" placeholder="{{__ 'Name Arabic'}}" value="{{data.nameAr}}" />
                </div>
                <div class="col-md-12 fv-row fv-plugins-icon-container" data-select2-id="select2-data-122-08jy">
                    <label class="required fw-semibold fs-6 mb-2">{{__ 'Name English'}}</label>
                    <input type="text" name="nameEn" id="nameEn" class="form-control  mb-3 mb-lg-0" placeholder="{{__ ' Name English'}}" value="{{data.nameEn}}" />
                </div>



                {{#if levelData}}
                    {{#each levelData}}
                        <div class="col-md-12 fv-row fv-plugins-icon-container" id="Dep{{this.level}}" >
                            {{#compare this.level '===' 1}}
                                <label class=" fs-6 fw-semibold mb-2">{{__ 'Parent'}}</label>
                            {{/compare}}
                            <select class="form-select " data-control=""  data-placeholder="{{__ 'Select parent department'}}" name="parentID" id="parentID{{this.level}}" onchange="DepChange(this)">
                                <option></option>
                                {{#each this.departments}}
                                    <option value="{{this.departmentID}}" {{#compare this.departmentID '===' ../this.curDepartmentID}}selected{{/compare}}>{{? ../LNG '==' 'ar' this.nameAr this.nameEn}}</option>
                                {{/each}}
                            </select>
                            <script type="text/javascript">
                                $('#parentID{{this.level}}').select2({dropdownParent: $('#form_modal')});
                            </script>
                        </div>
                    {{/each}}

                    {{#each emptyDiv}}
                        <div class="col-md-12 fv-row fv-plugins-icon-container" id="Dep{{this.level}}" style="display: none;"></div>
                    {{/each}}

                {{else}}

                    <div class="col-md-12 fv-row fv-plugins-icon-container" id="Dep1" >
                        <label class=" fs-6 fw-semibold mb-2">{{__ 'Parent'}}</label>
                        <select class="form-select " data-control=""  data-placeholder="{{__ 'Select parent department'}}" name="parentID" id="parentID" onchange="DepChange(this)">
                            <option></option>
                            {{#each departments}}
                                <option value="{{this.departmentID}}" {{#compare this.departmentID '===' ../data.parentID}}selected{{/compare}}>{{? ../LNG '==' 'ar' this.nameAr this.nameEn}}</option>
                            {{/each}}
                        </select>
                    </div>

                    <div class="col-md-12 fv-row fv-plugins-icon-container" id="Dep2" style="display: none;">
                    </div>
                    <div class="col-md-12 fv-row fv-plugins-icon-container" id="Dep3" style="display: none;">
                    </div>
                    <div class="col-md-12 fv-row fv-plugins-icon-container" id="Dep4" style="display: none;">
                    </div>
                    <div class="col-md-12 fv-row fv-plugins-icon-container" id="Dep5" style="display: none;">
                    </div>
                    <div class="col-md-12 fv-row fv-plugins-icon-container" id="Dep6" style="display: none;">
                    </div>
                    <div class="col-md-12 fv-row fv-plugins-icon-container" id="Dep7" style="display: none;">
                    </div>
                    <div class="col-md-12 fv-row fv-plugins-icon-container" id="Dep8" style="display: none;">
                    </div>
                    <div class="col-md-12 fv-row fv-plugins-icon-container" id="Dep9" style="display: none;">
                    </div>

                {{/if}}
            </div>

            <br>

            <div class="text-center pt-15">
                <button type="reset" class="btn btn-light me-3" data-kt-users-modal-action="cancel">{{__ 'Discard'}}</button>
                <button type="submit" class="btn btn-primary" data-kt-users-modal-action="submit">
                    <span class="indicator-label">{{__ 'Submit'}}</span>
                    <span class="indicator-progress">{{__ 'Please wait...'}}
                    <span class="spinner-border spinner-border-sm align-middle ms-2"></span></span>
                </button>
                <input type="hidden" name="mode" id="mode" value="{{mode}}">
                <input type="hidden" name="departmentID" id="departmentID" value="{{data.departmentID}}">
            </div>
            <!--end::Actions-->
        </form>
        <!--end::Form-->
    </div>
    <!--end::Modal body-->
    </div>



<script type="text/javascript">
    mode = $('#mode').val()
    "use strict";
    $('#parentID').select2({dropdownParent: $('#form_modal'),})
// Class definition
    var KTAddItem = function () {
        // Shared variables
        const element = document.getElementById('form_modal');
        const form = element.querySelector('#form_modal_form');
        const modal = new bootstrap.Modal(element);
        // Init add schedule modal
        var initAddItem = () => {

            // Init form validation rules. For more info check the FormValidation plugin's official documentation:https://formvalidation.io/
            var validator = FormValidation.formValidation(
                form,
                {
                    fields: {
                         'nameEn': {
                            validators: {
                                notEmpty: {
                                    message: '{{__ "Name English is required"}}'
                                }
                            }
                        },
                         'nameAr': {
                            validators: {
                                notEmpty: {
                                    message: '{{__ "Name arabic is required"}}'
                                }
                            }
                        },
                        
                    },
                    plugins: {
                        trigger: new FormValidation.plugins.Trigger(),
                        bootstrap: new FormValidation.plugins.Bootstrap5({
                            rowSelector: '.fv-row',
                            eleInvalidClass: '',
                            eleValidClass: ''
                        }),
                        
                    }
                }
            );

         

            // Submit button handler
            const submitButton = element.querySelector('[data-kt-users-modal-action="submit"]');
            submitButton.addEventListener('click', e => {
                e.preventDefault();

                // Validate form before submit
                if (validator) {
                    validator.validate().then(function (status) {
                        if (status == 'Valid') {

                            // Show loading indication
                            submitButton.setAttribute('data-kt-indicator', 'on');
                            // Disable button to avoid multiple click 
                            submitButton.disabled = true;
                            //
                            //const formData = new FormData(validator.form); 
                            const formData =  $(validator.form).serializeFormJSON(); 
                          
                            request('department', {
                                method: 'POST',
                                body:  formData
                            })
                            .then(response => {
                                if(response){
                                    PSA.toast.success("{{__ 'new department created successfully'}} ")
                                    $('#kt_table_item').DataTable().ajax.reload();
                                    modal.hide();
                                }
                                else{
                                    submitButton.setAttribute('data-kt-indicator', 'off');
                                    submitButton.disabled = false;
                                    PSA.toast.error("{{__ 'Sorry, looks like there are some errors detected, please try again.'}} ")
                                }
                                //location.reload();
                            })
                            .catch(PSA.exception.catch);
                            
                        } else {
                            // Show popup warning. For more info check the plugin's official documentation: https://sweetalert2.github.io/
                            Swal.fire({
                                text: '{{__ "Sorry, looks like there are some errors detected, please try again."}}',
                                icon: "error",
                                buttonsStyling: false,
                                confirmButtonText: "{{__ 'ok'}}",
                                customClass: {
                                    confirmButton: "btn btn-primary"
                                }
                            });
                        }
                    });
                }
            });

            // Cancel button handler
            const cancelButton = element.querySelector('[data-kt-users-modal-action="cancel"]');
            cancelButton.addEventListener('click', e => {
                e.preventDefault();

                Swal.fire({
                    text: '{{__ "Are you sure you would like to cancel?"}}',
                    icon: "warning",
                    showCancelButton: true,
                    buttonsStyling: false,
                    confirmButtonText: '{{__ "Yes, cancel it!"}}',
                    cancelButtonText: '{{__ "No, return"}}',
                    customClass: {
                        confirmButton: "btn btn-primary",
                        cancelButton: "btn btn-active-light"
                    }
                }).then(function (result) {
                    if (result.value) {
                        form.reset(); // Reset form			
                        modal.hide();	
                    } else if (result.dismiss === 'cancel') {
                        Swal.fire({
                            text: '{{__ "Your form has not been cancelled!."}}',
                            icon: "error",
                            buttonsStyling: false,
                            confirmButtonText: '{{__ "Ok, got it!"}}',
                            customClass: {
                                confirmButton: "btn btn-primary",
                            }
                        });
                    }
                });
            });
        }

        return {
            // Public functions
            init: function () {
                initAddItem();
            }
        };
    }();

    // On document ready
    KTUtil.onDOMContentLoaded(function () {
        KTAddItem.init();
    });

    function DepChange(ref){
        
        let departmentID = ($('#DepartmentID').val())?$('#DepartmentID').val():0
        let parentID = (ref.value)?ref.value:ref
        //console.log(`/department/${departmentID}/${parentID}/checkParentDep`)
        if(parentID){
            request(`/department/${departmentID}/${parentID}/checkParentDep`)
            .then(response => {
                if (response && response.level) {
                     for(let i = response.level;i<=5;i++){
                        $('#Dep'+i).html(null);
                        $('#Dep'+i).hide();
                    }
                    if(response.html){
                        $('#Dep'+response.level).html(response.html);
                        $('#parentID'+response.level).select2({dropdownParent: $('#form_modal')});
                        $('#Dep'+response.level).show('slow');
                    }
                } else {
                    PSA.toast.error('{{__ "Something went wrong, please try again"}}','{{__ "Error"}}')
                }
            })
        .catch(PSA.exception.catch)
        }
    }

    function DepChangeOld(ref) {
        //console.log(ref)
        if(!ref)
            return null
        let ParentID = (ref.value)?ref.value:ref
        let DepartmentID = ($('#DepartmentID').val())?$('#DepartmentID').val():0

        $.ajax({
            url: '/department/'+DepartmentID+'/'+ParentID+'/CheckParentDep',
            type: 'get',
            success: function(data) {
                if(data.Level){
                    for(let i = data.Level;i<=5;i++){
                        $('#Dep'+i).html(null);
                    }
                    if(data.html){
                        $('#Dep'+data.Level).html(data.html);
                        $('#ParentID'+data.Level).select2();
                    }
                }
            },
            error: function(xhr, desc, err) {
                console.log(xhr);
                console.log("Details: " + desc + "\nError:" + err);
            }
        }); // end ajax call
    }


</script>

{{!-- 
PSA.confirmation({  body: mode == 'add'?"{{__ 'User created successfully'}}":"{{__ 'User updated successfully'}}" })
.then(() => {
        $('#kt_table_item').DataTable().ajax.reload();
        modal.hide();
}).catch(() => {}); --}}